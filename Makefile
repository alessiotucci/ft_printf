# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    Makefile                                           :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: atucci <marvin@42.fr>                      +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2023/03/08 12:23:33 by atucci            #+#    #+#              #
#    Updated: 2023/03/14 12:36:23 by atucci           ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

NAME = ./libftprintf.a

#This sets the variable NAME to ./libftprintf.a, which is the name and location of the static library that we will build.

SRC = ./ft_printf.c \
srcs/ft_pointer.c \
srcs/ft_num_utils.c \
srcs/ft_printf_utils.c \
srcs/check_flags.c \

#This sets the variable SRC to a list of C source files that are needed to build the libftprintf.a library.

OBJS = $(SRC:.c=.o)

#This sets the variable OBJS to a list of object files that need to be built from the SRC files.

HDRS = incl/ft_printf.h

#This sets the variable HDRS to the path of the header file that is included in the project.

RM = rm -f

#This sets the variable RM to the command that will be used to remove files.

CC = gcc -Wall -Wextra -Werror

#This sets the variable CC to the compiler command with warning flags enabled.

.c.o = ${CC} -I ${HDRS} includes -c $< -o ${<:.c=.o}

#This is a rule that specifies how to build an object file from a C source file. It compiles the C file with the appropriate flags and options, and outputs the resulting object file.

$(NAME): ${OBJS}
	$(MAKE) -C ./libft
	cp ./libft/libft.a ./$(NAME)
	ar rc $(NAME) $(OBJS)
	ranlib $(NAME)

#This is the rule to build the libftprintf.a static library. It depends on the object files generated by the .c.o rule. It creates the library by archiving the object files with ar command and then runs ranlib to index the library.

all: $(NAME)

#This rule specifies that running make without any arguments will build the libftprintf.a library.

clean:
	${RM} $(OBJS)
	$(MAKE) -C ./libft clean
#This rule specifies how to clean up the generated object files.

fclean: clean
	${RM} $(NAME) ${OBJS}
	$(MAKE) -C ./libft fclean
#This rule specifies how to completely remove the generated object files and the libftprintf.a library.

re: fclean all

#This rule specifies how to rebuild the project completely by removing all object files and rebuilding the libftprintf.a library.

.PHONY: all clean fclean re

#This declares the targets all, clean, fclean, and re as phony targets, which means that they don't correspond to actual files but instead are just names for actions that need to be performed.
